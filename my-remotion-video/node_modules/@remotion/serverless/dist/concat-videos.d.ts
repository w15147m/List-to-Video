import type { AudioCodec, CancelSignal, CombineChunksOnProgress, FrameRange, LogLevel } from '@remotion/renderer';
import type { CloudProvider, ServerlessCodec } from '@remotion/serverless-client';
import type { InsideFunctionSpecifics } from './provider-implementation';
export declare const concatVideos: <Provider extends CloudProvider>({ onProgress, codec, fps, numberOfGifLoops, files, outdir, audioCodec, audioBitrate, logLevel, framesPerLambda, binariesDirectory, cancelSignal, preferLossless, metadata, insideFunctionSpecifics, everyNthFrame, frameRange, compositionDurationInFrames, }: {
    onProgress: CombineChunksOnProgress;
    codec: ServerlessCodec;
    fps: number;
    numberOfGifLoops: number | null;
    files: string[];
    outdir: string;
    audioCodec: AudioCodec | null;
    audioBitrate: string | null;
    logLevel: LogLevel;
    framesPerLambda: number;
    binariesDirectory: string | null;
    cancelSignal: CancelSignal | undefined;
    preferLossless: boolean;
    metadata: Record<string, string> | null;
    insideFunctionSpecifics: InsideFunctionSpecifics<Provider>;
    compositionDurationInFrames: number;
    everyNthFrame: number;
    frameRange: FrameRange | null;
}) => Promise<{
    outfile: string;
    cleanupChunksProm: Promise<void>;
}>;
