import type { CloudProvider, OnStream, ProviderSpecifics, ServerlessPayload } from '@remotion/serverless-client';
import type { InsideFunctionSpecifics } from '../provider-implementation';
type Options = {
    expectedBucketOwner: string;
    isWarm: boolean;
};
export type RequestContext = {
    invokedFunctionArn: string;
    getRemainingTimeInMillis: () => number;
    awsRequestId: string;
};
export declare const rendererHandler: <Provider extends CloudProvider>({ onStream, options, params, providerSpecifics, requestContext, insideFunctionSpecifics, }: {
    params: ServerlessPayload<Provider>;
    options: Options;
    onStream: OnStream<Provider>;
    requestContext: RequestContext;
    providerSpecifics: ProviderSpecifics<Provider>;
    insideFunctionSpecifics: InsideFunctionSpecifics<Provider>;
}) => Promise<void>;
export {};
