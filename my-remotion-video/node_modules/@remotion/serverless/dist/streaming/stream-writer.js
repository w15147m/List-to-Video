"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.streamWriter = void 0;
// Ensures that the previous write is finished before the next one is started
// Genius solution by ChatGPT
const streamWriter = (responseStream) => {
    let promiseChain = Promise.resolve();
    const write = (message) => {
        promiseChain = promiseChain.then(() => {
            return new Promise((resolve, reject) => {
                responseStream.write(message, (err) => {
                    if (err) {
                        reject(err);
                    }
                    else {
                        resolve();
                    }
                });
            });
        });
        return promiseChain;
    };
    const end = () => {
        promiseChain = promiseChain.then(() => {
            return new Promise((resolve) => {
                responseStream.end(() => {
                    resolve();
                });
            });
        });
        return promiseChain;
    };
    return { write, end };
};
exports.streamWriter = streamWriter;
