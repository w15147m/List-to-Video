"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.findOutputFileInBucket = void 0;
const serverless_client_1 = require("@remotion/serverless-client");
const findOutputFileInBucket = async ({ region, renderMetadata, bucketName, customCredentials, currentRegion, providerSpecifics, forcePathStyle, requestHandler, }) => {
    if (!renderMetadata) {
        throw new Error('unexpectedly did not get renderMetadata');
    }
    const { renderBucketName, key } = (0, serverless_client_1.getExpectedOutName)({
        renderMetadata,
        bucketName,
        customCredentials,
        bucketNamePrefix: providerSpecifics.getBucketPrefix(),
    });
    try {
        await providerSpecifics.headFile({
            bucketName,
            key,
            region,
            customCredentials,
            forcePathStyle,
            requestHandler,
        });
        return {
            url: providerSpecifics.getOutputUrl({
                renderMetadata,
                bucketName,
                customCredentials,
                currentRegion,
            }).url,
        };
    }
    catch (err) {
        if (err.name === 'NotFound') {
            return null;
        }
        if (err.message === 'UnknownError' ||
            err.$metadata
                .httpStatusCode === 403) {
            throw new Error(`Unable to access item "${key}" from bucket "${renderBucketName}" ${(customCredentials === null || customCredentials === void 0 ? void 0 : customCredentials.endpoint)
                ? `(S3 Endpoint = ${customCredentials === null || customCredentials === void 0 ? void 0 : customCredentials.endpoint})`
                : ''} - got a 403 error when heading the file. Check your credentials and permissions. The Lambda role must have permission for both "s3:GetObject" and "s3:ListBucket" actions.`, { cause: err });
        }
        throw err;
    }
};
exports.findOutputFileInBucket = findOutputFileInBucket;
