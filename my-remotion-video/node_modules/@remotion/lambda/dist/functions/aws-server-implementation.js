"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.serverAwsImplementation = void 0;
const lambda_client_1 = require("@remotion/lambda-client");
const serverless_1 = require("@remotion/serverless");
const clean_tmpdir_1 = require("./helpers/clean-tmpdir");
const get_current_region_1 = require("./helpers/get-current-region");
const get_folder_files_1 = require("./helpers/get-folder-files");
const make_aws_artifact_1 = require("./helpers/make-aws-artifact");
const timer_1 = require("./helpers/timer");
exports.serverAwsImplementation = {
    forgetBrowserEventLoop: serverless_1.forgetBrowserEventLoopImplementation,
    getBrowserInstance: serverless_1.getBrowserInstanceImplementation,
    timer: timer_1.timer,
    getCurrentRegionInFunction: get_current_region_1.getCurrentRegionInFunctionImplementation,
    generateRandomId: ({ deleteAfter, randomHashFn }) => {
        return lambda_client_1.LambdaClientInternals.generateRandomHashWithLifeCycleRule({
            deleteAfter,
            randomHashFn,
        });
    },
    deleteTmpDir: () => Promise.resolve((0, clean_tmpdir_1.deleteTmpDir)()),
    getCurrentFunctionName: () => {
        if (!process.env.AWS_LAMBDA_FUNCTION_NAME) {
            throw new Error('Expected AWS_LAMBDA_FUNCTION_NAME to be set');
        }
        return process.env.AWS_LAMBDA_FUNCTION_NAME;
    },
    getCurrentMemorySizeInMb: () => {
        return Number(process.env.AWS_LAMBDA_FUNCTION_MEMORY_SIZE);
    },
    invokeWebhook: serverless_1.invokeWebhook,
    makeArtifactWithDetails: make_aws_artifact_1.makeAwsArtifact,
    getFolderFiles: get_folder_files_1.getFolderFiles,
};
