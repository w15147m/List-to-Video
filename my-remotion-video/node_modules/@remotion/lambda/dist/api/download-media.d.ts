import type { AwsRegion, RequestHandler } from '@remotion/lambda-client';
import { type AwsProvider } from '@remotion/lambda-client';
import type { LogLevel } from '@remotion/renderer';
import type { ProviderSpecifics } from '@remotion/serverless';
import { type CustomCredentials } from '@remotion/serverless';
import type { LambdaReadFileProgress } from '../functions/helpers/read-with-progress';
export type DownloadMediaInput = {
    region: AwsRegion;
    bucketName: string;
    renderId: string;
    outPath: string;
    onProgress?: LambdaReadFileProgress;
    customCredentials?: CustomCredentials<AwsProvider>;
    logLevel?: LogLevel;
    forcePathStyle?: boolean;
    requestHandler?: RequestHandler;
};
export type DownloadMediaOutput = {
    outputPath: string;
    sizeInBytes: number;
};
export declare const internalDownloadMedia: (input: DownloadMediaInput & {
    providerSpecifics: ProviderSpecifics<AwsProvider>;
    forcePathStyle: boolean;
}) => Promise<DownloadMediaOutput>;
export declare const downloadMedia: (input: DownloadMediaInput) => Promise<DownloadMediaOutput>;
