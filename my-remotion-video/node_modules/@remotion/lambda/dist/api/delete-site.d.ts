import type { AwsRegion, RequestHandler } from '@remotion/lambda-client';
import { type AwsProvider } from '@remotion/lambda-client';
import type { ProviderSpecifics } from '@remotion/serverless';
type MandatoryParameters = {
    bucketName: string;
    siteName: string;
    region: AwsRegion;
};
type OptionalParameters = {
    onAfterItemDeleted: ((data: {
        bucketName: string;
        itemName: string;
    }) => void) | null;
    forcePathStyle: boolean;
    requestHandler: RequestHandler | null;
};
export type DeleteSiteInput = MandatoryParameters & OptionalParameters;
export type DeleteSiteOptionalInput = MandatoryParameters & Partial<OptionalParameters>;
export type DeleteSiteOutput = {
    totalSizeInBytes: number;
};
export declare const internalDeleteSite: ({ bucketName, siteName, region, onAfterItemDeleted, providerSpecifics, forcePathStyle, requestHandler, }: DeleteSiteInput & {
    providerSpecifics: ProviderSpecifics<AwsProvider>;
}) => Promise<DeleteSiteOutput>;
export declare const deleteSite: (props: DeleteSiteOptionalInput) => Promise<DeleteSiteOutput>;
export {};
