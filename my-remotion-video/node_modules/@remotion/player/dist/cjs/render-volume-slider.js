"use strict";
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, "default", { enumerable: true, value: v });
}) : function(o, v) {
    o["default"] = v;
});
var __importStar = (this && this.__importStar) || (function () {
    var ownKeys = function(o) {
        ownKeys = Object.getOwnPropertyNames || function (o) {
            var ar = [];
            for (var k in o) if (Object.prototype.hasOwnProperty.call(o, k)) ar[ar.length] = k;
            return ar;
        };
        return ownKeys(o);
    };
    return function (mod) {
        if (mod && mod.__esModule) return mod;
        var result = {};
        if (mod != null) for (var k = ownKeys(mod), i = 0; i < k.length; i++) if (k[i] !== "default") __createBinding(result, mod, k[i]);
        __setModuleDefault(result, mod);
        return result;
    };
})();
Object.defineProperty(exports, "__esModule", { value: true });
exports.renderDefaultVolumeSlider = void 0;
const jsx_runtime_1 = require("react/jsx-runtime");
const react_1 = __importStar(require("react"));
const remotion_1 = require("remotion");
const MediaVolumeSlider_1 = require("./MediaVolumeSlider");
const icons_1 = require("./icons");
const KNOB_SIZE = 12;
const BAR_HEIGHT = 5;
const DefaultVolumeSlider = ({ volume, isVertical, onBlur, inputRef, setVolume, }) => {
    const sliderContainer = (0, react_1.useMemo)(() => {
        const paddingLeft = 5;
        const common = {
            paddingLeft,
            height: icons_1.ICON_SIZE,
            width: MediaVolumeSlider_1.VOLUME_SLIDER_WIDTH,
            display: 'inline-flex',
            alignItems: 'center',
        };
        if (isVertical) {
            return {
                ...common,
                position: 'absolute',
                transform: `rotate(-90deg) translateX(${MediaVolumeSlider_1.VOLUME_SLIDER_WIDTH / 2 + icons_1.ICON_SIZE / 2}px)`,
            };
        }
        return {
            ...common,
        };
    }, [isVertical]);
    // Need to import it from React to fix React 17 ESM support.
    const randomId = 
    // eslint-disable-next-line react-hooks/rules-of-hooks
    typeof react_1.default.useId === 'undefined' ? 'volume-slider' : react_1.default.useId();
    const [randomClass] = (0, react_1.useState)(() => `__remotion-volume-slider-${(0, remotion_1.random)(randomId)}`.replace('.', ''));
    const onVolumeChange = (0, react_1.useCallback)((e) => {
        setVolume(parseFloat(e.target.value));
    }, [setVolume]);
    const inputStyle = (0, react_1.useMemo)(() => {
        const commonStyle = {
            WebkitAppearance: 'none',
            backgroundColor: 'rgba(255, 255, 255, 0.5)',
            borderRadius: BAR_HEIGHT / 2,
            cursor: 'pointer',
            height: BAR_HEIGHT,
            width: MediaVolumeSlider_1.VOLUME_SLIDER_WIDTH,
            backgroundImage: `linear-gradient(
				to right,
				white ${volume * 100}%, rgba(255, 255, 255, 0) ${volume * 100}%
			)`,
        };
        if (isVertical) {
            return {
                ...commonStyle,
                bottom: icons_1.ICON_SIZE + MediaVolumeSlider_1.VOLUME_SLIDER_WIDTH / 2,
            };
        }
        return commonStyle;
    }, [isVertical, volume]);
    const sliderStyle = `
	.${randomClass}::-webkit-slider-thumb {
		-webkit-appearance: none;
		background-color: white;
		border-radius: ${KNOB_SIZE / 2}px;
		box-shadow: 0 0 2px black;
		height: ${KNOB_SIZE}px;
		width: ${KNOB_SIZE}px;
	}

	.${randomClass}::-moz-range-thumb {
		-webkit-appearance: none;
		background-color: white;
		border-radius: ${KNOB_SIZE / 2}px;
		box-shadow: 0 0 2px black;
		height: ${KNOB_SIZE}px;
		width: ${KNOB_SIZE}px;
	}
`;
    return ((0, jsx_runtime_1.jsxs)("div", { style: sliderContainer, children: [(0, jsx_runtime_1.jsx)("style", { 
                // eslint-disable-next-line react/no-danger
                dangerouslySetInnerHTML: {
                    __html: sliderStyle,
                } }), (0, jsx_runtime_1.jsx)("input", { ref: inputRef, "aria-label": "Change volume", className: randomClass, max: 1, min: 0, onBlur: onBlur, onChange: onVolumeChange, step: 0.01, type: "range", value: volume, style: inputStyle })] }));
};
const renderDefaultVolumeSlider = (props) => {
    return (0, jsx_runtime_1.jsx)(DefaultVolumeSlider, { ...props });
};
exports.renderDefaultVolumeSlider = renderDefaultVolumeSlider;
