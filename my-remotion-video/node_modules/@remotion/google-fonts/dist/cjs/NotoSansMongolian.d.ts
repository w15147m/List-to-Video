export declare const getInfo: () => {
    fontFamily: string;
    importName: string;
    version: string;
    url: string;
    unicodeRanges: {
        '[90]': string;
        '[91]': string;
        '[92]': string;
        '[97]': string;
        '[98]': string;
        '[99]': string;
        '[100]': string;
        '[101]': string;
        '[102]': string;
        '[103]': string;
        '[105]': string;
        '[106]': string;
        '[108]': string;
        '[109]': string;
        '[110]': string;
        '[112]': string;
        '[113]': string;
        '[114]': string;
        '[115]': string;
        '[116]': string;
        '[117]': string;
        '[118]': string;
        '[119]': string;
        math: string;
        mongolian: string;
        symbols: string;
        'latin-ext': string;
        latin: string;
    };
    fonts: {
        normal: {
            '400': {
                '[90]': string;
                '[91]': string;
                '[92]': string;
                '[97]': string;
                '[98]': string;
                '[99]': string;
                '[100]': string;
                '[101]': string;
                '[102]': string;
                '[103]': string;
                '[105]': string;
                '[106]': string;
                '[108]': string;
                '[109]': string;
                '[110]': string;
                '[112]': string;
                '[113]': string;
                '[114]': string;
                '[115]': string;
                '[116]': string;
                '[117]': string;
                '[118]': string;
                '[119]': string;
                math: string;
                mongolian: string;
                symbols: string;
                'latin-ext': string;
                latin: string;
            };
        };
    };
    subsets: string[];
};
export declare const fontFamily: "Noto Sans Mongolian";
type Variants = {
    normal: {
        weights: '400';
        subsets: 'latin' | 'latin-ext' | 'math' | 'mongolian' | 'symbols';
    };
};
export declare const loadFont: <T extends keyof Variants>(style?: T, options?: {
    weights?: Variants[T]["weights"][];
    subsets?: Variants[T]["subsets"][];
    document?: Document;
    ignoreTooManyRequestsWarning?: boolean;
}) => {
    fontFamily: import("./base").FontInfo["fontFamily"];
    fonts: import("./base").FontInfo["fonts"];
    unicodeRanges: import("./base").FontInfo["unicodeRanges"];
    waitUntilDone: () => Promise<undefined>;
};
export {};
