"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.validateOutname = void 0;
const pure_1 = require("@remotion/renderer/pure");
const validate_bucket_name_1 = require("./validate-bucket-name");
const validateS3Key = (s3Key) => {
    if (typeof s3Key !== 'string') {
        throw new TypeError('The S3 key must be a string. Passed an object of type ' + typeof s3Key);
    }
    // https://docs.aws.amazon.com/AmazonS3/latest/userguide/object-keys.html
    if (!s3Key.match(/^([0-9a-zA-Z-!_.*'()/:&$@=;+,?]+)/g)) {
        throw new Error("The S3 Key must match the RegExp `/^([0-9a-zA-Z-!_.*'()/:&$@=;+,?]+)/g`. You passed: " +
            s3Key +
            '. Check for invalid characters.');
    }
};
const validateOutname = ({ outName, codec, audioCodecSetting, separateAudioTo, bucketNamePrefix, }) => {
    if (typeof outName === 'undefined' || outName === null) {
        return;
    }
    if (typeof outName !== 'string') {
        validateS3Key(outName.key);
        (0, validate_bucket_name_1.validateBucketName)({
            bucketName: outName.bucketName,
            bucketNamePrefix,
            options: {
                mustStartWithRemotion: false,
            },
        });
        return;
    }
    if (codec) {
        pure_1.NoReactAPIs.validateOutputFilename({
            codec,
            audioCodecSetting,
            extension: pure_1.NoReactAPIs.getExtensionOfFilename(outName),
            preferLossless: false,
            separateAudioTo,
        });
    }
    validateS3Key(outName);
};
exports.validateOutname = validateOutname;
