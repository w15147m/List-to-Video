"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.getCustomOutName = void 0;
const getCustomOutName = ({ renderMetadata, customCredentials, }) => {
    var _a, _b, _c;
    if (!renderMetadata.outName) {
        return null;
    }
    if (typeof renderMetadata.outName === 'string') {
        return renderMetadata.outName;
    }
    if (renderMetadata.outName.s3OutputProvider) {
        if (!customCredentials && renderMetadata.privacy === 'private') {
            throw new TypeError(`The file was rendered with a custom S3 implementation and is not public, but no custom credentials were passed to downloadMedia().`);
        }
        return {
            bucketName: renderMetadata.outName.bucketName,
            key: renderMetadata.outName.key,
            s3OutputProvider: {
                endpoint: renderMetadata.outName.s3OutputProvider.endpoint,
                accessKeyId: (_a = customCredentials === null || customCredentials === void 0 ? void 0 : customCredentials.accessKeyId) !== null && _a !== void 0 ? _a : null,
                secretAccessKey: (_b = customCredentials === null || customCredentials === void 0 ? void 0 : customCredentials.secretAccessKey) !== null && _b !== void 0 ? _b : null,
                region: customCredentials === null || customCredentials === void 0 ? void 0 : customCredentials.region,
                forcePathStyle: (_c = customCredentials === null || customCredentials === void 0 ? void 0 : customCredentials.forcePathStyle) !== null && _c !== void 0 ? _c : false,
            },
        };
    }
    return {
        bucketName: renderMetadata.outName.bucketName,
        key: renderMetadata.outName.key,
    };
};
exports.getCustomOutName = getCustomOutName;
