"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.RENDERER_PATH_TOKEN = exports.REMOTION_CONCATENATED_TOKEN = exports.MINIMUM_FRAMES_PER_FUNCTION = exports.MAX_FUNCTIONS_PER_RENDER = exports.CONCAT_FOLDER_TOKEN = exports.artifactName = exports.overallProgressKey = exports.customOutName = exports.outName = exports.outStillName = exports.rendersPrefix = exports.serverlessCodecs = exports.ServerlessRoutines = exports.expiryDays = exports.COMMAND_NOT_FOUND = void 0;
exports.COMMAND_NOT_FOUND = 'Command not found';
// Needs to be in sync with renderer/src/options/delete-after.ts#L7
exports.expiryDays = {
    '1-day': 1,
    '3-days': 3,
    '7-days': 7,
    '30-days': 30,
};
var ServerlessRoutines;
(function (ServerlessRoutines) {
    ServerlessRoutines["info"] = "info";
    ServerlessRoutines["start"] = "start";
    ServerlessRoutines["launch"] = "launch";
    ServerlessRoutines["status"] = "status";
    ServerlessRoutines["renderer"] = "renderer";
    ServerlessRoutines["still"] = "still";
    ServerlessRoutines["compositions"] = "compositions";
})(ServerlessRoutines || (exports.ServerlessRoutines = ServerlessRoutines = {}));
exports.serverlessCodecs = [
    'h264',
    'h265',
    'vp8',
    'vp9',
    'mp3',
    'aac',
    'wav',
    'gif',
    'prores',
];
const rendersPrefix = (renderId) => `renders/${renderId}`;
exports.rendersPrefix = rendersPrefix;
const outStillName = (renderId, imageFormat) => `${(0, exports.rendersPrefix)(renderId)}/out.${imageFormat}`;
exports.outStillName = outStillName;
const outName = (renderId, extension) => `${(0, exports.rendersPrefix)(renderId)}/out.${extension}`;
exports.outName = outName;
const customOutName = (renderId, bucketName, name) => {
    var _a;
    if (typeof name === 'string') {
        return {
            renderBucketName: bucketName,
            key: `${(0, exports.rendersPrefix)(renderId)}/${name}`,
            customCredentials: null,
        };
    }
    return {
        key: name.key,
        renderBucketName: name.bucketName,
        customCredentials: (_a = name.s3OutputProvider) !== null && _a !== void 0 ? _a : null,
    };
};
exports.customOutName = customOutName;
const overallProgressKey = (renderId) => `${(0, exports.rendersPrefix)(renderId)}/progress.json`;
exports.overallProgressKey = overallProgressKey;
const artifactName = (renderId, name) => `${(0, exports.rendersPrefix)(renderId)}/artifacts/${name}`;
exports.artifactName = artifactName;
exports.CONCAT_FOLDER_TOKEN = 'remotion-concat';
exports.MAX_FUNCTIONS_PER_RENDER = 200;
exports.MINIMUM_FRAMES_PER_FUNCTION = 5;
exports.REMOTION_CONCATENATED_TOKEN = 'remotion-concatenated-token';
exports.RENDERER_PATH_TOKEN = 'remotion-bucket';
