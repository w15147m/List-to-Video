"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.inspectErrors = void 0;
const docs_url_1 = require("./docs-url");
const error_category_1 = require("./error-category");
const FAILED_TO_LAUNCH_TOKEN = 'Failed to launch browser.';
const getExplanation = (stack) => {
    if (stack.includes('FATAL:zygote_communication_linux.cc')) {
        return (FAILED_TO_LAUNCH_TOKEN +
            ' Will be retried - you can probably ignore this error.');
    }
    if (stack.includes('error while loading shared libraries: libnss3.so')) {
        return (FAILED_TO_LAUNCH_TOKEN +
            ' Will be retried - you can probably ignore this error.');
    }
    if (stack.includes('TooManyRequestsException') ||
        stack.includes('ConcurrentInvocationLimitExceeded')) {
        return `AWS returned an "TooManyRequestsException" error message which could mean you reached the concurrency limit of AWS Lambda. You can increase the limit - read this troubleshooting page: ${docs_url_1.DOCS_URL}/docs/lambda/troubleshooting/rate-limit`;
    }
    if ((0, error_category_1.errorIsOutOfSpaceError)(stack)) {
        return `Your lambda function reached the storage limit. Reduce the amount of space needed per lambda function or increase the storage limit: ${docs_url_1.DOCS_URL}/docs/lambda/disk-size.`;
    }
    if ((0, error_category_1.isErrInsufficientResourcesErr)(stack)) {
        return 'The lambda ran out of memory. Deploy a new function with more memory.';
    }
    if ((0, error_category_1.isBrowserCrashedError)(stack)) {
        return 'The browser crashed while rendering the video. Deploy a new function with memory to give the browser more resources.';
    }
    return null;
};
const inspectErrors = ({ errors, }) => {
    return errors.map((e) => {
        return {
            ...e,
            explanation: getExplanation(e.stack),
            s3Location: '',
        };
    });
};
exports.inspectErrors = inspectErrors;
