import type { CustomCredentials } from './constants';
import type { ProviderSpecifics } from './provider-implementation';
import type { CloudProvider } from './types';
type GetOrCreateBucketInputInner<Provider extends CloudProvider> = {
    region: Provider['region'];
    enableFolderExpiry: boolean | null;
    customCredentials: CustomCredentials<Provider> | null;
    providerSpecifics: ProviderSpecifics<Provider>;
    forcePathStyle: boolean;
    skipPutAcl: boolean;
    requestHandler: Provider['requestHandler'] | null;
};
export type GetOrCreateBucketInput<Provider extends CloudProvider> = {
    region: Provider['region'];
    enableFolderExpiry?: boolean;
    customCredentials?: CustomCredentials<Provider>;
    forcePathStyle?: boolean;
    requestHandler?: Provider['requestHandler'];
};
export type GetOrCreateBucketOutput = {
    bucketName: string;
    alreadyExisted: boolean;
};
export declare const internalGetOrCreateBucket: <Provider extends CloudProvider>(params: GetOrCreateBucketInputInner<Provider>) => Promise<GetOrCreateBucketOutput>;
export {};
