import type { Browser, BrowserExecutable, CancelSignal, ChromeMode, ChromiumOptions, LogLevel, StillImageFormat } from '@remotion/renderer';
import type { JobProgressCallback } from '@remotion/studio-server';
export declare const renderStillFlow: ({ remotionRoot, fullEntryPoint, entryPointReason, remainingArgs, browser, browserExecutable, chromiumOptions, envVariables, height, serializedInputPropsWithCustomSchema, overwrite, port, publicDir, puppeteerTimeout, jpegQuality, scale, stillFrame, width, compositionIdFromUi, imageFormatFromUi, logLevel, onProgress, indent, addCleanupCallback, cancelSignal, outputLocationFromUi, offthreadVideoCacheSizeInBytes, binariesDirectory, publicPath, chromeMode, offthreadVideoThreads, audioLatencyHint, mediaCacheSizeInBytes, }: {
    remotionRoot: string;
    fullEntryPoint: string;
    entryPointReason: string;
    remainingArgs: (string | number)[];
    serializedInputPropsWithCustomSchema: string;
    envVariables: Record<string, string>;
    jpegQuality: number;
    browser: Browser;
    stillFrame: number;
    browserExecutable: BrowserExecutable;
    chromiumOptions: ChromiumOptions;
    scale: number;
    overwrite: boolean;
    puppeteerTimeout: number;
    port: number | null;
    publicDir: string | null;
    height: number | null;
    width: number | null;
    compositionIdFromUi: string | null;
    imageFormatFromUi: StillImageFormat | null;
    logLevel: LogLevel;
    onProgress: JobProgressCallback;
    indent: boolean;
    addCleanupCallback: (label: string, cb: () => void) => void;
    cancelSignal: CancelSignal | null;
    outputLocationFromUi: string | null;
    offthreadVideoCacheSizeInBytes: number | null;
    offthreadVideoThreads: number | null;
    binariesDirectory: string | null;
    publicPath: string | null;
    chromeMode: ChromeMode;
    audioLatencyHint: AudioContextLatencyCategory | null;
    mediaCacheSizeInBytes: number | null;
}) => Promise<void>;
