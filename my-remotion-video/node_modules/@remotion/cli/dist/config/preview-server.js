"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.getRendererPortFromConfigFileAndCliFlag = exports.getRendererPortFromConfigFile = exports.getStudioPort = exports.setRendererPort = exports.setStudioPort = exports.setPort = void 0;
const parsed_cli_1 = require("../parsed-cli");
let studioPort;
let rendererPort;
const validatePort = (port) => {
    if (!['number', 'undefined'].includes(typeof port)) {
        throw new Error(`Studio server port should be a number. Got ${typeof port} (${JSON.stringify(port)})`);
    }
    if (port === undefined) {
        return;
    }
    if (port < 1 || port > 65535) {
        throw new Error(`Studio server port should be a number between 1 and 65535. Got ${port}`);
    }
};
/**
 *
 * @param port
 * @deprecated Use the `setStudioPort` and `setRendererPort` functions instead
 * @returns
 */
const setPort = (port) => {
    (0, exports.setStudioPort)(port);
    (0, exports.setRendererPort)(port);
};
exports.setPort = setPort;
const setStudioPort = (port) => {
    validatePort(port);
    studioPort = port;
};
exports.setStudioPort = setStudioPort;
const setRendererPort = (port) => {
    validatePort(port);
    rendererPort = port;
};
exports.setRendererPort = setRendererPort;
const getStudioPort = () => studioPort;
exports.getStudioPort = getStudioPort;
const getRendererPortFromConfigFile = () => {
    return rendererPort !== null && rendererPort !== void 0 ? rendererPort : null;
};
exports.getRendererPortFromConfigFile = getRendererPortFromConfigFile;
const getRendererPortFromConfigFileAndCliFlag = () => {
    var _a, _b;
    return (_b = (_a = parsed_cli_1.parsedCli.port) !== null && _a !== void 0 ? _a : rendererPort) !== null && _b !== void 0 ? _b : null;
};
exports.getRendererPortFromConfigFileAndCliFlag = getRendererPortFromConfigFileAndCliFlag;
