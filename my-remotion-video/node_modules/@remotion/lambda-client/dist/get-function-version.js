"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.getFunctionVersion = void 0;
const serverless_client_1 = require("@remotion/serverless-client");
const aws_provider_1 = require("./aws-provider");
const getFunctionVersion = async ({ functionName, region, logLevel, requestHandler, }) => {
    try {
        // For now, we'll pass requestHandler to the awsImplementation if needed
        // This might require deeper changes in the serverless-client framework
        const result = await aws_provider_1.awsImplementation.callFunctionSync({
            functionName,
            payload: {
                logLevel,
                type: serverless_client_1.ServerlessRoutines.info,
            },
            region,
            type: serverless_client_1.ServerlessRoutines.info,
            timeoutInTest: 120000,
            requestHandler,
        });
        return result.version;
    }
    catch (err) {
        // Prerelease versions had no info command
        if (err.message.includes(serverless_client_1.COMMAND_NOT_FOUND)) {
            return 'n/a';
        }
        // Bug in certain version of AWS S3 kit
        if (err.message.includes('AWS CRT binary not present ')) {
            return 'n/a';
        }
        throw err;
    }
};
exports.getFunctionVersion = getFunctionVersion;
