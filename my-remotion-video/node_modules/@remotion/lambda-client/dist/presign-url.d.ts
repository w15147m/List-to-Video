import type { AwsRegion } from './regions';
import type { RequestHandler } from './types';
type MandatoryParameters = {
    region: AwsRegion;
    bucketName: string;
    objectKey: string;
    expiresInSeconds: number;
};
type OptionalParameters<CheckIfObjectExists extends boolean> = {
    checkIfObjectExists: CheckIfObjectExists;
    forcePathStyle: boolean;
};
export type PresignUrlInput<CheckIfObjectExists extends boolean = boolean> = MandatoryParameters & Partial<OptionalParameters<CheckIfObjectExists>> & {
    requestHandler?: RequestHandler;
};
export declare const presignUrl: <CheckIfObjectExists extends boolean = false>({ region, bucketName, objectKey, checkIfObjectExists, expiresInSeconds, forcePathStyle, requestHandler, }: PresignUrlInput<CheckIfObjectExists>) => Promise<CheckIfObjectExists extends true ? string | null : string>;
export {};
