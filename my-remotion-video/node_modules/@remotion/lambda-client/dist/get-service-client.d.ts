import { CloudWatchLogsClient } from '@aws-sdk/client-cloudwatch-logs';
import { IAMClient } from '@aws-sdk/client-iam';
import { LambdaClient } from '@aws-sdk/client-lambda';
import { S3Client } from '@aws-sdk/client-s3';
import { ServiceQuotasClient } from '@aws-sdk/client-service-quotas';
import { STSClient } from '@aws-sdk/client-sts';
import type { CustomCredentials } from '@remotion/serverless-client';
import type { AwsProvider } from './aws-provider';
import type { AwsRegion } from './regions';
import type { RequestHandler } from './types';
export type ServiceMapping = {
    s3: S3Client;
    cloudwatch: CloudWatchLogsClient;
    iam: IAMClient;
    lambda: LambdaClient;
    servicequotas: ServiceQuotasClient;
    sts: STSClient;
};
export declare const getServiceClient: <T extends keyof ServiceMapping>({ region, service, customCredentials, forcePathStyle, requestHandler, }: {
    region: AwsRegion;
    service: T;
    customCredentials: CustomCredentials<AwsProvider> | null;
    forcePathStyle: boolean;
    requestHandler: RequestHandler | null;
}) => ServiceMapping[T];
