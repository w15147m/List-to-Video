"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.getProgressJsonUrl = exports.getS3RenderUrl = exports.getCloudwatchRendererUrl = exports.getLambdaInsightsUrl = exports.getCloudwatchMethodUrl = void 0;
const encode_aws_url_params_1 = require("./encode-aws-url-params");
const cloudWatchUrlWithQuery = ({ region, functionNameToUse, query, }) => {
    return `https://${region}.console.aws.amazon.com/cloudwatch/home?region=${region}#logsV2:log-groups/log-group/$252Faws$252Flambda$252F${functionNameToUse}/log-events$3FfilterPattern$3D${(0, encode_aws_url_params_1.encodeAwsUrlParams)(query)}`;
};
const getCloudwatchMethodUrl = ({ region, functionName, renderId, rendererFunctionName, method, }) => {
    const functionNameToUse = rendererFunctionName !== null && rendererFunctionName !== void 0 ? rendererFunctionName : functionName;
    const query = `"method=${method},renderId=${renderId}"`;
    return cloudWatchUrlWithQuery({ region, functionNameToUse, query });
};
exports.getCloudwatchMethodUrl = getCloudwatchMethodUrl;
const getLambdaInsightsUrl = ({ region, functionName, }) => {
    return `https://${region}.console.aws.amazon.com/cloudwatch/home?region=${region}#lambda-insights:functions/${functionName}`;
};
exports.getLambdaInsightsUrl = getLambdaInsightsUrl;
const getCloudwatchRendererUrl = ({ region, functionName, renderId, rendererFunctionName, chunk }) => {
    const functionNameToUse = rendererFunctionName !== null && rendererFunctionName !== void 0 ? rendererFunctionName : functionName;
    const query = `"method=renderer,renderId=${renderId}${chunk === null ? '' : `,chunk=${chunk},`}"`;
    return cloudWatchUrlWithQuery({ region, functionNameToUse, query });
};
exports.getCloudwatchRendererUrl = getCloudwatchRendererUrl;
const getS3RenderUrl = ({ renderId, region, bucketName, }) => {
    return `https://s3.console.aws.amazon.com/s3/buckets/${bucketName}?region=${region}&prefix=renders/${renderId}/`;
};
exports.getS3RenderUrl = getS3RenderUrl;
const getProgressJsonUrl = ({ region, bucketName, renderId, }) => {
    return `https://${region}.console.aws.amazon.com/s3/object/${bucketName}?region=${region}&bucketType=general&prefix=renders/${renderId}/progress.json`;
};
exports.getProgressJsonUrl = getProgressJsonUrl;
