"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.checkCredentials = void 0;
const serverless_client_1 = require("@remotion/serverless-client");
const get_env_variable_1 = require("./get-env-variable");
const is_cli_1 = require("./is-cli");
const is_likely_to_have_aws_profile_1 = require("./is-likely-to-have-aws-profile");
const messageForVariable = (variable) => {
    return [
        `You have tried to call a Remotion Lambda function, but have not set the environment variable ${variable}.`,
        (0, is_cli_1.getIsCli)()
            ? null
            : `- Environment variables from a '.env' file are not automatically read if you are calling the Node.JS APIs, in that case you need to load the file yourself or set the environment variables manually.`,
        `- Please refer to the Remotion Lambda docs (${serverless_client_1.DOCS_URL}/docs/lambda/setup) to see how to generate the credentials for your AWS account and then set the environment variables.`,
        `- For more reasons see the troubleshooting page: ${serverless_client_1.DOCS_URL}/docs/lambda/troubleshooting/permissions`,
    ]
        .filter(serverless_client_1.truthy)
        .join('\n');
};
const checkCredentials = () => {
    if ((0, get_env_variable_1.getEnvVariable)('REMOTION_SKIP_AWS_CREDENTIALS_CHECK')) {
        return;
    }
    if ((0, get_env_variable_1.getEnvVariable)('REMOTION_AWS_PROFILE') || (0, get_env_variable_1.getEnvVariable)('AWS_PROFILE')) {
        return;
    }
    if ((0, is_likely_to_have_aws_profile_1.isLikelyToHaveAwsProfile)()) {
        return;
    }
    if (!(0, get_env_variable_1.getEnvVariable)('AWS_ACCESS_KEY_ID') &&
        !(0, get_env_variable_1.getEnvVariable)('REMOTION_AWS_ACCESS_KEY_ID')) {
        throw new Error(messageForVariable('AWS_ACCESS_KEY_ID or REMOTION_AWS_ACCESS_KEY_ID'));
    }
    if (!(0, get_env_variable_1.getEnvVariable)('AWS_SECRET_ACCESS_KEY') &&
        !(0, get_env_variable_1.getEnvVariable)('REMOTION_AWS_SECRET_ACCESS_KEY')) {
        throw new Error(messageForVariable('AWS_SECRET_ACCESS_KEY or REMOTION_AWS_SECRET_ACCESS_KEY'));
    }
};
exports.checkCredentials = checkCredentials;
