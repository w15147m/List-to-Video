import type { WebpackOverrideFn } from '@remotion/bundler';
import type { LogLevel } from '@remotion/renderer';
import type { GitSource, RenderDefaults, RenderJob } from '@remotion/studio-shared';
import type { QueueMethods } from './preview-server/api-types';
export declare const startStudio: ({ browserArgs, browserFlag, configValueShouldOpenBrowser, fullEntryPath, logLevel, getCurrentInputProps, getEnvVariables, desiredPort, maxTimelineTracks, remotionRoot, keyboardShortcutsEnabled, relativePublicDir, webpackOverride, poll, getRenderDefaults, getRenderQueue, numberOfAudioTags, queueMethods, parsedCliOpen, previewEntry, gitSource, bufferStateDelayInMilliseconds, binariesDirectory, forceIPv4, audioLatencyHint, enableCrossSiteIsolation, }: {
    browserArgs: string;
    browserFlag: string;
    logLevel: LogLevel;
    configValueShouldOpenBrowser: boolean;
    fullEntryPath: string;
    getCurrentInputProps: () => object;
    getEnvVariables: () => Record<string, string>;
    desiredPort: number | null;
    maxTimelineTracks: number | null;
    bufferStateDelayInMilliseconds: number | null;
    remotionRoot: string;
    keyboardShortcutsEnabled: boolean;
    relativePublicDir: string | null;
    webpackOverride: WebpackOverrideFn;
    poll: number | null;
    getRenderDefaults: () => RenderDefaults;
    getRenderQueue: () => RenderJob[];
    numberOfAudioTags: number;
    audioLatencyHint: AudioContextLatencyCategory | null;
    enableCrossSiteIsolation: boolean;
    queueMethods: QueueMethods;
    parsedCliOpen: boolean;
    previewEntry: string;
    gitSource: GitSource | null;
    binariesDirectory: string | null;
    forceIPv4: boolean;
}) => Promise<void>;
