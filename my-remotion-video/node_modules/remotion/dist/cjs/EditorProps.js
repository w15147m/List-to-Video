"use strict";
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, "default", { enumerable: true, value: v });
}) : function(o, v) {
    o["default"] = v;
});
var __importStar = (this && this.__importStar) || (function () {
    var ownKeys = function(o) {
        ownKeys = Object.getOwnPropertyNames || function (o) {
            var ar = [];
            for (var k in o) if (Object.prototype.hasOwnProperty.call(o, k)) ar[ar.length] = k;
            return ar;
        };
        return ownKeys(o);
    };
    return function (mod) {
        if (mod && mod.__esModule) return mod;
        var result = {};
        if (mod != null) for (var k = ownKeys(mod), i = 0; i < k.length; i++) if (k[i] !== "default") __createBinding(result, mod, k[i]);
        __setModuleDefault(result, mod);
        return result;
    };
})();
Object.defineProperty(exports, "__esModule", { value: true });
exports.EditorPropsProvider = exports.timeValueRef = exports.editorPropsProviderRef = exports.EditorPropsContext = void 0;
const jsx_runtime_1 = require("react/jsx-runtime");
const react_1 = __importStar(require("react"));
exports.EditorPropsContext = (0, react_1.createContext)({
    props: {},
    updateProps: () => {
        throw new Error('Not implemented');
    },
    resetUnsaved: () => {
        throw new Error('Not implemented');
    },
});
exports.editorPropsProviderRef = react_1.default.createRef();
exports.timeValueRef = react_1.default.createRef();
const EditorPropsProvider = ({ children }) => {
    const [props, setProps] = react_1.default.useState({});
    const updateProps = (0, react_1.useCallback)(({ defaultProps, id, newProps, }) => {
        setProps((prev) => {
            var _a;
            return {
                ...prev,
                [id]: typeof newProps === 'function'
                    ? newProps((_a = prev[id]) !== null && _a !== void 0 ? _a : defaultProps)
                    : newProps,
            };
        });
    }, []);
    const resetUnsaved = (0, react_1.useCallback)((compositionId) => {
        setProps((prev) => {
            if (prev[compositionId]) {
                const newProps = { ...prev };
                delete newProps[compositionId];
                return newProps;
            }
            return prev;
        });
    }, []);
    (0, react_1.useImperativeHandle)(exports.editorPropsProviderRef, () => {
        return {
            getProps: () => props,
            setProps,
        };
    }, [props]);
    const ctx = (0, react_1.useMemo)(() => {
        return { props, updateProps, resetUnsaved };
    }, [props, resetUnsaved, updateProps]);
    return ((0, jsx_runtime_1.jsx)(exports.EditorPropsContext.Provider, { value: ctx, children: children }));
};
exports.EditorPropsProvider = EditorPropsProvider;
