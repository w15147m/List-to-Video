import { ServiceQuotasServiceException as __BaseException } from "./ServiceQuotasServiceException";
export class AccessDeniedException extends __BaseException {
    name = "AccessDeniedException";
    $fault = "client";
    Message;
    constructor(opts) {
        super({
            name: "AccessDeniedException",
            $fault: "client",
            ...opts,
        });
        Object.setPrototypeOf(this, AccessDeniedException.prototype);
        this.Message = opts.Message;
    }
}
export const AppliedLevelEnum = {
    ACCOUNT: "ACCOUNT",
    ALL: "ALL",
    RESOURCE: "RESOURCE",
};
export class AWSServiceAccessNotEnabledException extends __BaseException {
    name = "AWSServiceAccessNotEnabledException";
    $fault = "client";
    Message;
    constructor(opts) {
        super({
            name: "AWSServiceAccessNotEnabledException",
            $fault: "client",
            ...opts,
        });
        Object.setPrototypeOf(this, AWSServiceAccessNotEnabledException.prototype);
        this.Message = opts.Message;
    }
}
export class DependencyAccessDeniedException extends __BaseException {
    name = "DependencyAccessDeniedException";
    $fault = "client";
    Message;
    constructor(opts) {
        super({
            name: "DependencyAccessDeniedException",
            $fault: "client",
            ...opts,
        });
        Object.setPrototypeOf(this, DependencyAccessDeniedException.prototype);
        this.Message = opts.Message;
    }
}
export class NoAvailableOrganizationException extends __BaseException {
    name = "NoAvailableOrganizationException";
    $fault = "client";
    Message;
    constructor(opts) {
        super({
            name: "NoAvailableOrganizationException",
            $fault: "client",
            ...opts,
        });
        Object.setPrototypeOf(this, NoAvailableOrganizationException.prototype);
        this.Message = opts.Message;
    }
}
export class OrganizationNotInAllFeaturesModeException extends __BaseException {
    name = "OrganizationNotInAllFeaturesModeException";
    $fault = "client";
    Message;
    constructor(opts) {
        super({
            name: "OrganizationNotInAllFeaturesModeException",
            $fault: "client",
            ...opts,
        });
        Object.setPrototypeOf(this, OrganizationNotInAllFeaturesModeException.prototype);
        this.Message = opts.Message;
    }
}
export class ServiceException extends __BaseException {
    name = "ServiceException";
    $fault = "server";
    Message;
    constructor(opts) {
        super({
            name: "ServiceException",
            $fault: "server",
            ...opts,
        });
        Object.setPrototypeOf(this, ServiceException.prototype);
        this.Message = opts.Message;
    }
}
export class TemplatesNotAvailableInRegionException extends __BaseException {
    name = "TemplatesNotAvailableInRegionException";
    $fault = "client";
    Message;
    constructor(opts) {
        super({
            name: "TemplatesNotAvailableInRegionException",
            $fault: "client",
            ...opts,
        });
        Object.setPrototypeOf(this, TemplatesNotAvailableInRegionException.prototype);
        this.Message = opts.Message;
    }
}
export class TooManyRequestsException extends __BaseException {
    name = "TooManyRequestsException";
    $fault = "client";
    Message;
    constructor(opts) {
        super({
            name: "TooManyRequestsException",
            $fault: "client",
            ...opts,
        });
        Object.setPrototypeOf(this, TooManyRequestsException.prototype);
        this.Message = opts.Message;
    }
}
export class IllegalArgumentException extends __BaseException {
    name = "IllegalArgumentException";
    $fault = "client";
    Message;
    constructor(opts) {
        super({
            name: "IllegalArgumentException",
            $fault: "client",
            ...opts,
        });
        Object.setPrototypeOf(this, IllegalArgumentException.prototype);
        this.Message = opts.Message;
    }
}
export class NoSuchResourceException extends __BaseException {
    name = "NoSuchResourceException";
    $fault = "client";
    Message;
    constructor(opts) {
        super({
            name: "NoSuchResourceException",
            $fault: "client",
            ...opts,
        });
        Object.setPrototypeOf(this, NoSuchResourceException.prototype);
        this.Message = opts.Message;
    }
}
export class ServiceQuotaTemplateNotInUseException extends __BaseException {
    name = "ServiceQuotaTemplateNotInUseException";
    $fault = "client";
    Message;
    constructor(opts) {
        super({
            name: "ServiceQuotaTemplateNotInUseException",
            $fault: "client",
            ...opts,
        });
        Object.setPrototypeOf(this, ServiceQuotaTemplateNotInUseException.prototype);
        this.Message = opts.Message;
    }
}
export const ErrorCode = {
    DEPENDENCY_ACCESS_DENIED_ERROR: "DEPENDENCY_ACCESS_DENIED_ERROR",
    DEPENDENCY_SERVICE_ERROR: "DEPENDENCY_SERVICE_ERROR",
    DEPENDENCY_THROTTLING_ERROR: "DEPENDENCY_THROTTLING_ERROR",
    SERVICE_QUOTA_NOT_AVAILABLE_ERROR: "SERVICE_QUOTA_NOT_AVAILABLE_ERROR",
};
export const ServiceQuotaTemplateAssociationStatus = {
    ASSOCIATED: "ASSOCIATED",
    DISASSOCIATED: "DISASSOCIATED",
};
export const PeriodUnit = {
    DAY: "DAY",
    HOUR: "HOUR",
    MICROSECOND: "MICROSECOND",
    MILLISECOND: "MILLISECOND",
    MINUTE: "MINUTE",
    SECOND: "SECOND",
    WEEK: "WEEK",
};
export const QuotaContextScope = {
    ACCOUNT: "ACCOUNT",
    RESOURCE: "RESOURCE",
};
export const RequestStatus = {
    APPROVED: "APPROVED",
    CASE_CLOSED: "CASE_CLOSED",
    CASE_OPENED: "CASE_OPENED",
    DENIED: "DENIED",
    INVALID_REQUEST: "INVALID_REQUEST",
    NOT_APPROVED: "NOT_APPROVED",
    PENDING: "PENDING",
};
export class InvalidPaginationTokenException extends __BaseException {
    name = "InvalidPaginationTokenException";
    $fault = "client";
    Message;
    constructor(opts) {
        super({
            name: "InvalidPaginationTokenException",
            $fault: "client",
            ...opts,
        });
        Object.setPrototypeOf(this, InvalidPaginationTokenException.prototype);
        this.Message = opts.Message;
    }
}
export class InvalidResourceStateException extends __BaseException {
    name = "InvalidResourceStateException";
    $fault = "client";
    Message;
    constructor(opts) {
        super({
            name: "InvalidResourceStateException",
            $fault: "client",
            ...opts,
        });
        Object.setPrototypeOf(this, InvalidResourceStateException.prototype);
        this.Message = opts.Message;
    }
}
export class QuotaExceededException extends __BaseException {
    name = "QuotaExceededException";
    $fault = "client";
    Message;
    constructor(opts) {
        super({
            name: "QuotaExceededException",
            $fault: "client",
            ...opts,
        });
        Object.setPrototypeOf(this, QuotaExceededException.prototype);
        this.Message = opts.Message;
    }
}
export class ResourceAlreadyExistsException extends __BaseException {
    name = "ResourceAlreadyExistsException";
    $fault = "client";
    Message;
    constructor(opts) {
        super({
            name: "ResourceAlreadyExistsException",
            $fault: "client",
            ...opts,
        });
        Object.setPrototypeOf(this, ResourceAlreadyExistsException.prototype);
        this.Message = opts.Message;
    }
}
export class TagPolicyViolationException extends __BaseException {
    name = "TagPolicyViolationException";
    $fault = "client";
    Message;
    constructor(opts) {
        super({
            name: "TagPolicyViolationException",
            $fault: "client",
            ...opts,
        });
        Object.setPrototypeOf(this, TagPolicyViolationException.prototype);
        this.Message = opts.Message;
    }
}
export class TooManyTagsException extends __BaseException {
    name = "TooManyTagsException";
    $fault = "client";
    Message;
    constructor(opts) {
        super({
            name: "TooManyTagsException",
            $fault: "client",
            ...opts,
        });
        Object.setPrototypeOf(this, TooManyTagsException.prototype);
        this.Message = opts.Message;
    }
}
